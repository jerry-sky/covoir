@use '~@angular/material' as mat;

@include mat.core();

// Define a light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$light-theme: mat.define-light-theme(
    (
        color: (
            primary: $light-primary,
            accent: $light-accent,
        )
    )
);

// Define a dark theme
$dark-primary: mat.define-palette(mat.$purple-palette);
$dark-accent: mat.define-palette(mat.$green-palette);
$dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: $dark-primary,
            accent: $dark-accent,
        )
    )
);

// Apply the dark theme by default
@include mat.core-theme($dark-theme);
@include mat.button-theme($dark-theme);

$dark-background: #333;
$light-background: #efefef;

$dark-font-colour: #efefef;
$light-font-colour: #222;

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    background: $dark-background;
    color: $dark-font-colour;
}

mat-paginator {
    .mat-paginator-container {
        flex-direction: row-reverse !important;
    }
}

@media (max-width: 500px) {
    mat-paginator {
        width: 500px;
    }

    .paginator-wrapper {
        overflow-x: scroll;
        height: 56px;
        overflow-y: hidden;
    }

    .mat-paginator-container {
        flex-wrap: nowrap !important;
    }
}

// Apply the light theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.my-light-theme {
    @include mat.core-color($light-theme);
    @include mat.button-color($light-theme);

    body {
        background: $light-background;
        color: $light-font-colour;
    }
}
